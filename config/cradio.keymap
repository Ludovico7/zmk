// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <180>;
            quick-tap-ms = <140>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };

        cmt: mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <180>;
            quick-tap-ms = <140>;
            require-prior-idle-ms = <100>;
            bindings = <&mo>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    macros {
        tab_up: tab_up {
    compatible = "zmk,behavior-macro";
    #binding-cells = <0>;
    bindings = 
        <&macro_press &kp LCTRL>
        , <&macro_tap &kp UP_ARROW>
        , <&macro_release &kp LCTRL>
        ;
    label = "TAB_UP";
};

tab_left: tab_left {
    compatible = "zmk,behavior-macro";
    #binding-cells = <0>;
    bindings = 
        <&macro_press &kp LCTRL>
        , <&macro_tap &kp LEFT>
        , <&macro_release &kp LCTRL>
        ;
    label = "TAB_LEFT";
};

tab_right: tab_right {
    compatible = "zmk,behavior-macro";
    #binding-cells = <0>;
    bindings = 
        <&macro_press &kp LCTRL>
        , <&macro_tap &kp RIGHT>
        , <&macro_release &kp LCTRL>
        ;
    label = "TAB_RIGHT";
};

chrome_left: chrome_left {
    compatible = "zmk,behavior-macro";
    #binding-cells = <0>;
    bindings = 
        <&macro_press &kp LGUI>
        , <&macro_press &kp LALT>
        , <&macro_tap &kp LEFT_ARROW>
        , <&macro_release &kp LALT>
        , <&macro_release &kp LGUI>
        ;
    label = "CHROME_LEFT";
};

chrome_right: chrome_right {
    compatible = "zmk,behavior-macro";
    #binding-cells = <0>;
    bindings = 
        <&macro_press &kp LGUI>
        , <&macro_press &kp LALT>
        , <&macro_tap &kp RIGHT>
        , <&macro_release &kp LALT>
        , <&macro_release &kp LGUI>
        ;
    label = "CHROME_RIGHT";
};

screenshot: screenshot {
    compatible = "zmk,behavior-macro";
    #binding-cells = <0>;
    bindings = 
        <&macro_press &kp LSHFT>
        , <&macro_press &kp LGUI>
        , <&macro_tap &kp NUMBER_4>
        , <&macro_release &kp LGUI>
        , <&macro_release &kp LSHFT>
        ;
    label = "SCREENSHOT";
};

record: record {
    compatible = "zmk,behavior-macro";
    #binding-cells = <0>;
    bindings = 
        <&macro_press &kp LSHFT>
        , <&macro_press &kp LGUI>
        , <&macro_tap &kp NUMBER_5>
        , <&macro_release &kp LGUI>
        , <&macro_release &kp LSHFT>
        ;
    label = "RECORD";
};

    };

    combos {
        compatible = "zmk,combos";

        qw_tab {
            bindings = <&kp TAB>;
            key-positions = <0 1>;
        };

        as_capslock {
            bindings = <&kp CLCK>;
            key-positions = <10 11>;
        };

        lshift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <12 13>;
        };

        rshift {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <16 17>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q        &kp W       &kp E       &kp R          &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P
&ht LCTRL A  &ht LALT S  &ht LGUI D  &kp F          &kp G        &kp H      &kp J  &kp K      &kp L    &kp SEMICOLON
&kp Z        &kp X       &kp C       &kp V          &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &cmt 2 SLASH
                                     &kp BACKSPACE  &kp SPACE    &kp ENTER  &mo 1
            >;
        };

        right_layer {
            bindings = <
&kp N1  &kp N2  &kp N3    &kp N4         &kp N5       &kp N6    &kp N7     &kp N8     &kp N9      &kp N0
&kp LT  &kp GT  &kp LPAR  &kp RPAR       &kp EQUAL    &kp PLUS  &kp LBRC   &kp RBRC   &kp LBKT    &kp RBKT
&trans  &trans  &none     &kp BSLH       &kp MINUS    &kp SQT   &kp GRAVE  &kp COMMA  &kp PERIOD  &kp RSHFT
                          &kp BACKSPACE  &kp SPACE    &trans    &mo 3
            >;
        };

        left_layer {
            bindings = <
&kp ESCAPE    &none           &kp UP_ARROW    &none           &none          &none       &tab_left     &tab_up  &tab_right     &kp F12
&kp HOME      &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT       &kp END        &none       &chrome_left  &none    &chrome_right  &mo 3
&bt BT_SEL 0  &bt BT_SEL 1    &bt BT_CLR      &bt BT_CLR_ALL  &sys_reset     &sys_reset  &mkp MB4      &none    &mkp MB5       &none
                                              &none           &screenshot    &record     &none
            >;
        };

        tri_layer {
            bindings = <
&none  &none           &mmv MOVE_UP    &msc SCRL_UP            &none    &none     &tab_left     &tab_up  &tab_right     &none
&none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none    &none     &chrome_left  &none    &chrome_right  &none
&none  &none           &none           &msc SCRL_DOWN            &none    &mkp MB3  &mkp MB4      &none    &mkp MB5       &none
                                       &none            &none    &mkp MB1  &mkp MB2
            >;
        };
    };
};
